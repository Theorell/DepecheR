% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dWilcox.R
\name{dWilcox}
\alias{dWilcox}
\title{Wilcoxon rank-sum or signed rank test comparison of subject groups in a dClust result}
\usage{
dWilcox(xYData, idsVector, groupVector, clusterVector, displayVector,
  paired = FALSE, multipleCorrMethod = "hochberg", densContour = TRUE,
  name = "dWilcox", groupName1 = unique(groupVector)[1],
  groupName2 = unique(groupVector)[2], title = FALSE, maxAbsPlottingValues,
  createDirectory = FALSE, directoryName = "dWilcox", bandColor = "black",
  dotSize = 400/sqrt(nrow(xYData)))
}
\arguments{
\item{xYData}{A dataframe with two columns. Each row contains information about the x and y positition in the field for that observation.}

\item{idsVector}{Vector with the same length as xYData containing information about the id of each observation.}

\item{groupVector}{Vector with the same length as xYData containing information about the group identity of each observation.}

\item{clusterVector}{Vector with the same length as xYData containing information about the cluster identity of each observation.}

\item{displayVector}{Optionally, if the dataset is very large and the SNE calculation hence becomes impossible to perform for the full dataset, this vector can be included. It should contain the set of rows from the data used for statistics, that has been used to generate the xYData.}

\item{paired}{If the data is paired, so that Wilcoxon signed rank test instead of Wilcoxon rank-sum test/Mann_Whitney test can be used. Defaults to false, i.e. no assumption of pairing is made and Wilcoxon rank sum-test.}

\item{multipleCorrMethod}{Which method that should be used for adjustment ofmultiple comparisons. Defaults to Benjamini-Hochberg, but all other methods available in \code{\link{p.adjust}} can be used.}

\item{densContour}{An object to create the density contours for the plot. Three possible values: 
\describe{
              \item{densContour}{A densContour object generated previously with dContours}
              \item{TRUE}{a densContour object will be generated internally}
              \item{FALSE}{No density contours will be displayed.}
             }}

\item{name}{The main name for the graph and the analysis.}

\item{groupName1}{The name for the first group}

\item{groupName2}{The name for the second group}

\item{title}{If there should be a title displayed on the plotting field. As the plotting field is saved as a png, this title cannot be removed as an object afterwards, as it is saved as coloured pixels. To simplify usage for publication, the default is FALSE, as the files are still named, eventhough no title appears on the plot.}

\item{maxAbsPlottingValues}{If multiple plots should be compared, it might be useful to define a similar color scale for all plots, so that the same color always means the same statistical value. Such a value can be added here. It defaults to the maximum Wilcoxon statistic that is generated in the analysis.}

\item{createDirectory}{If a directory (i.e. folder) should be created. Defaults to TRUE.}

\item{directoryName}{The name of the created directory, if it should be created.}

\item{bandColor}{The color of the contour bands. Defaults to black.}

\item{dotSize}{Simply the size of the dots. The default makes the dots smaller the more observations that are included.}
}
\value{
This function always returns a dataframe showing the Wilcoxon statistic and the p-value for each cluster, with an included adjustment for multiple comparisons (see above). It also returns a sne based plot showing which events that belong to a cluster dominated by the first or the second group.
}
\description{
This function is used to compare groups of individuals from whom comparable cytometry or other complex data has been generated.
}
\examples{
#Generate a dataframe with bimodally distributed data and 20 subsamplings.
xindividuals <- generateBimodalData(samplings=40, dataCols=7, observations=500)

#Now add three columns that will separate the first ten from 
#the second ten individuals and merge the datasets
xgroups <- generateBimodalData(samplings=2, ncols=3, observations=10000)
colnames(xgroups)[2:4] <- c("X8", "X9", "X10")
x <- cbind(xindividuals[,1], xgroups[,1], 
xindividuals[,2:ncol(xindividuals)], xgroups[,2:ncol(xgroups)])

colnames(x)[1:2] <- c("ids", "group")

#Set a reasonable working directory, e.g.
setwd("~/Desktop")

#Optimize and run the clustering function.
xDepecheObject <- depeche(x[3:ncol(x)])
clusterVector <- xDepecheObject[[1]]

#Run Barnes Hut tSNE on this. 
library(Rtsne.multicore)
xSNE <- Rtsne.multicore(x_scaled, pca=FALSE)

#Run the function
dWilcox(xYData=as.data.frame(xSNE$Y), idsVector=x$ids, groupVector=x$group, clusterVector=clusterVector)
}
\seealso{
\code{\link{dColorPlot}}, \code{\link{dDensityPlot}}, \code{\link{dResidualPlot}}
}
