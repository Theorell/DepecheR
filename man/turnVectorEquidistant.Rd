% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/turnVectorEquidistant.R
\name{turnVectorEquidistant}
\alias{turnVectorEquidistant}
\title{Turn a vector into a equally ordered, but equidistant vector.}
\usage{
turnVectorEquidistant(x, startValue = 1)
}
\arguments{
\item{x}{Any vector, numeric or otherwise.}

\item{startValue}{The first value in the range of integers that will be the return vector. Default is 1.}
}
\value{
A numeric vector with equal distances between the unique values in the vector. The lowest unique value in the x vector will get the lowest value in this vector. The second lowest value in the x vector will get the second lowest value and so on.
}
\description{
Makes a numeric vector with equal distances between each possible number based on another vector with random distributions. For visualization of clusters on SNE field.
}
\examples{
#Make random vector with 10 unique values in the range 1-100
x <- sample(sample.int(100, 10), 1000, replace=TRUE)

#The unique values are
sort(unique(x))

#Run the function
y <- turnVectorEquidistant(x)

#Now, the unique values are distributed equally
sort(unique(y))

#The first occurence of the lowest value still comes in the same place, 
#so the structure of the original vector is retained.
identical(grep(min(x),x), grep(min(y), y))

}
