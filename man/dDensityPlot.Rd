% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dDensityPlot.R
\name{dDensityPlot}
\alias{dDensityPlot}
\title{Display density on 2D plot}
\usage{
dDensityPlot(xYData, color = "blue", commonName = "All_density",
  plotEachIdSeparately = FALSE, idsVector, densContour = TRUE,
  title = FALSE, createDirectory = TRUE,
  directoryName = paste("Density plots for ", commonName, "s", sep = ""),
  bandColor = "black", dotSize = 500/sqrt(nrow(xYData)),
  createPlot = TRUE)
}
\arguments{
\item{xYData}{A dataframe or matrix with two columns. Each row contains information about the x and y positition in the field for that observation.}

\item{color}{This gives the specific color of the plot. It has three potential return values:
\describe{
    \item{A specific color, e.g. "red" or "#FF0000"}{This will be the color in the densest part of the plot(s)}
    \item{"rainbowCols"}{Creates a specific set of colors similar to the rainbow.}
    \item{A vector of colors, the same length as nrow(xYData)}{Here, a separate density estimate will be performed for each color subcompartment of the xYData and these will be plotted together. Useful e.g. when the density distribution of a few different donors should be displayed.}
}}

\item{commonName}{A name that is common to all density plots created. It can be the groups name, e.g. "Malaria patients" or "Clusters". If only one plot is created, the name is still taken from here.}

\item{plotEachIdSeparately}{Separates the xYData into subframes specified in the idsVector and plots all ids together but with separate colors. Especially useful when all clusters in a simultaneous analysis should be shown. Colors are inherited from color. Defaults to FALSE.}

\item{idsVector}{Needed in two situations:
\describe{
    \item{When "plotEachIdSeparately"=TRUE}{Provides information about which rows that belong to which id and the names for the individual plots.}
    \item{When "color" is a vector of colors}{The ids are used to create the legend.}
}}

\item{densContour}{If density contours should be created for the plot(s) or not. Defaults to TRUE. If a density object, as generated by dContours, is included, this will be used for the internal scaling of the plot, allowing for density distribution checks of different subcompartments of the data with the same scaling.}

\item{title}{If there should be a title displayed on the plotting field. As the plotting field is saved as a png, this title cannot be removed as an object afterwards, as it is saved as coloured pixels. To simplify usage for publication, the default is FALSE, as the files are still named, eventhough no title appears on the plot.}

\item{createDirectory}{If a directory (i.e. folder) should be created. Defaults to TRUE.}

\item{directoryName}{The name of the created directory, if it should be created.}

\item{bandColor}{The color of the contour bands. Defaults to black.}

\item{dotSize}{Simply the size of the dots. The default makes the dots smaller the more observations that are included.}

\item{createPlot}{For testing purposes. Defaults to TRUE. If FALSE, no output is generated.}
}
\value{
Plots showing the densities of the specific xYData (subset) displayed as color on the field created by the same xYData (subset).
}
\description{
Function to show density for a set of observations on a field created by two variables. The plot is constructed primarily for displaying density of 2D-stochastic neighbour embedding fields, but can be used for any sets of two known for the same observations. As the number of datapoints is often very high, the files would, if saved as pdf of another vector based file type become big. For this reason, the plots are saved as jpeg and no axes or anything alike are added, to simplify usage in publications.
}
\examples{
#Load some data
data(testData)

#Run Barnes Hut tSNE on this. For more rapid example execution, a pre-run SNE is inluded
#library(Rtsne)
#testDataSNE <- Rtsne(testData[,2:15], pca=FALSE)
data(testDataSNE)

#Plot all ids together and use a fixed color
dDensityPlot(xYData=testDataSNE$Y, commonName="All_samplings", 
color="blue", createDirectory=FALSE)

#Now plot each id separately using a predefined colorscale separating each cluster.
#For this purpose, four individual donors are extracted from the test dataset.
testDataSubset <- rbind(testData[1:2000,], testData[95001:97000,])
testDataSNESubset <- rbind(testDataSNE$Y[1:2000,], testDataSNE$Y[95001:97000,])
testColor <- dColorVector(testDataSubset$ids, colorScale="plasma")

dDensityPlot(xYData=testDataSNESubset, color=testColor, plotEachIdSeparately=TRUE, 
idsVector=testDataSubset$ids, commonName="sampling")

#Now all four example donors are plotted together using the same predefined colorscale
dDensityPlot(xYData=testDataSNESubset, color=testColor, idsVector=testDataSubset$ids,
commonName="all samplings")

}
\seealso{
\code{\link{dColorPlot}}, \code{\link{dResidualPlot}}, \code{\link{dWilcox}}
}
