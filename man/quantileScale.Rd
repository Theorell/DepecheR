% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantileScale.R
\name{quantileScale}
\alias{quantileScale}
\title{Scaling of a vector or a dataframe.}
\usage{
quantileScale(x, control, lowQuantile = 0.001, highQuantile = 0.999,
  robustVarScale = TRUE, center = "peak", truncate = FALSE,
  multiplicationFactor = 1)
}
\arguments{
\item{x}{A numeric/integer vector or dataframe}

\item{control}{A numeric/integer vector or dataframe of values that could be used to define the range. If no control data is present, the function defaults to using the indata as control data.}

\item{lowQuantile}{The lower border below which the values are treated as outliers and will be outside of the defined scaling range (0-1*multiplicationFactor).}

\item{highQuantile}{The higher border above which the values are treated as outliers and will be outside of the defined scaling range (0-1*multiplicationFactor).}

\item{robustVarScale}{If the data should be scaled to its standard deviation within the quantiles defined by the high and low quantile below. If TRUE (the default), the data is first truncated with truncateData to the quantiles and then the standard deviation scaling is performed.}

\item{center}{If centering should be performed. Alternatives are "mean", "peak" and FALSE. "peak" results in centering around the highest peak in the data, which is useful in most cytometry situations, the reason it is default. "mean" results in mean centering.}

\item{truncate}{If truncation of the most extreme values should be performed. Three possible values:
#' \describe{
    \item{TRUE}{The same quantiles are used as for the low and high quantiles.}
    \item{FALSE}{No truncation.}
    \item{A vector with two values, eg c(0.01, 0.99)}{Data outside of these quantiles will be truncated.}
}}

\item{multiplicationFactor}{A value that all values will be multiplied with. Useful e.g. if the results preferrably should be returned as percent.}
}
\value{
A vector or dataframe with the same size but where all values in the vector or column of the dataframe have been internally scaled.
}
\description{
This is a scaling function with a number of alternatives. This method for scaling takes the shape of the data into somewhat more of a consideration than minMaxScale does, but still gives less influence of outliers than more conventional scalin alternatives, such as unit variance scaling.
}
\examples{
#Generate a default size dataframe with bimodally distributed data
x <- generateFlowCytometryData()

#Retrieve the first column
x2 <- x[,2]

#The maximum and minimum values are
max(x2)
min(x2)

#Run the function without mean centering and with the quantiles set to 0 and 1.
y2 <- quantileScale(x2, robustVarScale=FALSE, lowQuantile=0, highQuantile=1, center=FALSE)

#And the data has been scaled to the range between 0 and 1.
max(y2)
min(y2)

#Now run the default function for a dataframe
summary(x[,2:ncol(x)])

y_df <- quantileScale(x[,2:ncol(x)])

#Here, the data has first been truncated to the default percentiles, then scaled 
#to the standard deviation in the remaining interval and finally the center has been
#placed where the highest peak in the data is present.
summary(y_df)
}
\seealso{
\code{\link{truncateData}}
}
