% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dViolins.R
\name{dViolins}
\alias{dViolins}
\title{Create violin plots for all non-penalized variable for all clusters}
\usage{
dViolins(clusterVector, sparsityMatrix, inDataFrame,
  order = unique(clusterVector), colorScale = "viridis",
  plotAll = FALSE, createOutput = TRUE)
}
\arguments{
\item{clusterVector}{Vector with the same length as inDataFrame containing information about the cluster identity of each observation.}

\item{sparsityMatrix}{The sparsity matrix from the corresponding depeche run.}

\item{inDataFrame}{The data used to generate the depecheObject}

\item{order}{The order that the unique features of the cluster vector should appear in. For harmonization with colorVector and all subsequent functions.}

\item{colorScale}{The color scale. Inherited from the viridis, gplots and grDevices packages (and the package-specific 'dark_rainbow'). Seven possible scales are pre-made: inferno, magma, plasma, viridis, rich_colors, rainbow and dark_rainbow. User specified vectors of colors (e.g. c('#FF0033', '#03AF49')) are also accepted.}

\item{plotAll}{If all parameters, including the non-contributing, should be plotted for each cluster. Defaults to FALSE.}

\item{createOutput}{For testing purposes. Defaults to TRUE. If FALSE, no plots are generated.}
}
\value{
One graph is created for each non-penalized variable in each non-penalized cluster, which often means that the function creates a vast number of graphs. The graphs are sorted into subfolders for each cluster.
}
\description{
Here, violin plots of a specific cluster and the total population are created for each variable that has not been penalized away in the penalized K-means analysis. As all such plots are generated for each cluster, this function creates a great number of plots in most instances.
}
\examples{
# Load some data
data(testData)

\dontrun{
# Run the clustering function. For more rapid example execution,
# a depeche clustering of the data is inluded
# testDataDepeche <- depeche(testData[,2:15])
data(testDataDepeche)

# Create the plots of the variables that contribute to creating each cluster
dViolins(testDataDepeche$clusterVector, testDataDepeche$sparsityMatrix, 
inDataFrame = testData[, 2:15])
}

}
\seealso{
\code{\link{dDensityPlot}}, \code{\link{dColorPlot}}, \code{\link{dColorVector}}, \code{\link{depeche}}
}
