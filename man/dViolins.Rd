% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dViolins.R
\name{dViolins}
\alias{dViolins}
\title{Create violin plots for all non-penalized variable for all clusters}
\usage{
dViolins(clusterCenters, clusterVector, order = unique(clusterVector),
  inDataFrame)
}
\arguments{
\item{clusterCenters}{A matrix containing information about where the centers are in all the variables that contributed to creating the cluster with the given penalty term.}

\item{clusterVector}{A vector with information about the cluster identity of all observations. Needs to have the same length as the number of rows in the inDataFrame.}

\item{order}{The order that the unique features of the cluster vector should appear in. For harmonization with colorVector and all subsequent functions.}

\item{inDataFrame}{A dataframe that has been used to generate the cluster vector and the clusterCenters. Note that the scaling does not matter in this case, as each variable wil be plotted separately.}
}
\value{
One graph is created for each non-penalized variable in each non-penalized cluster, which often means that the function creates a vast number of graphs. The graphs are sorted into subfolders for each cluster.
}
\description{
Here, violin plots of a specific cluster and the total population are created for each variable that has not been penalized away in the penalized K-means analysis. As al such plots are generated for each cluster, this function creates a great number of plots in most instances.
}
\examples{
#Generate a default size dataframe with bimodally distributed data
x <- generateFlowCytometryData(samplings=2, ncols=8)

#Scale this dataframe
x_scaled <- quantileScale(x[2:ncol(x)])

#Set a reasonable working directory, e.g.
setwd("~/Desktop")

#Run the Optim function to get good starting points
x_optim <- dClustOpt(x_scaled, iterations=5, bootstrapObservations=1000)

#Then run the clustering function
x_clustered <- dClust(x_scaled, regVec=x_optim[[1]][1,1], 
withOrigoClust=x_optim[[1]][1,2], iterations=2, ids=x[,1])

#And finally create all the clusters
dViolins(clusterCenters=x_clustered$clusterCenters, clusterVector=as.numeric(x_clustered$clusterVector), inDataFrame=x[,2:ncol(x)])
}
\seealso{
\code{\link{dDensityPlot}}, \code{\link{dColorPlot}}, \code{\link{colorVector}}
}
