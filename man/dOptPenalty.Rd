% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dOptPenalty.R
\name{dOptPenalty}
\alias{dOptPenalty}
\title{Function to find the optimal penalty value for penalized K means}
\usage{
dOptPenalty(inDataFrameScaled, initCenters = 30, iterations = 50,
  bootstrapObservations = 10000, penaltyOffset = c(0, 2, 4, 8, 16, 32, 64,
  128), makeGraph = TRUE,
  graphName = "Distance as a function of penalty values.pdf",
  disableWarnings = FALSE)
}
\arguments{
\item{inDataFrameScaled}{A dataframe with the data that will be used to create the clustering. The data in this dataframe should be scaled in a proper way. Empirically, many datasets seem to be clustered in a meaningful way if they are scaled with the dScale function.}

\item{initCenters}{Number of starting points for clusters. This essentially means that it is the highest possible number of clusters that can be defined. The higher the number, the greater the precision, but the computing time is also increased with the number of starting points. Default is 30}

\item{iterations}{As it sounds, the number of bootstrap reiterations that are performed.}

\item{bootstrapObservations}{The number of observations that are included in each bootstrap subsampling of the data. NB! The algorithm uses resampling, so the same event can be used twice.}

\item{penaltyOffset}{These values are the ones that are evaluated and the ones that decide the penalization. The number of suggested default values are empirically defined and might not be optimal for a specific dataset, but the algorithm will warn if the most optimal values are on the borders of the range. Note that when this offset is 0, there is no penalization, which means that the algorithm runs normal K-means clustering.}

\item{makeGraph}{If a graph should be created showing the distance between bootstraps under different penalties.}

\item{graphName}{The name of the graph.}

\item{disableWarnings}{If the lowest or highest penalty is the most otpimal, the function gives a warning. This is suppressed with this command. Mostly to simplify use within other functions, such as dOptSampleSize.}
}
\value{
A graph showing the performance of the algorithm under the different penalty values and a list with two components:
\describe{
    \item{regOpt.df}{A dataframe with one row with all the information about which settings that were used to generate the optimal clustering. The "withOrigoClust" information tells the user if the solution with or without a cluster in origo gives the most optimal solution. If yes, this origo population is generally small and could be viewed as not fitting in the model.}
    \item{meanOptimDf}{A dataframe with the information about the results with all tested penalty values}
}
}
\description{
This function is used before the dClust function to identify the optimal penalty value for the specific dataset. This value decides the penalization and consequently also the number of clusters that are identified.
}
\examples{
#Generate a default size dataframe with bimodally distributed data
x <- generateBimodalData()

#Scale this datamframe
x_scaled <- dScale(x[,2:ncol(x)])

#Set a reasonable working directory, e.g.
setwd("~/Desktop")

#Run the function
x_optim <- dOptPenalty(x_scaled, iterations=10, bootstrapObservations=1000)
}
\seealso{
\code{\link{dClust}}, \code{\link{pClustPredict}}, \code{\link{dOptSampleSize}}
}
