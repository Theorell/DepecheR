% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dColorPlot.R
\name{dColorPlot}
\alias{dColorPlot}
\title{Display third variable as color on 2D plot}
\usage{
dColorPlot(colorData, controlData, xYData, names = "default",
  densContour = TRUE, addLegend = FALSE, idsVector,
  drawColorPalette = FALSE, title = FALSE, createDirectory = TRUE,
  directoryName = "Variables displayed as color on SNE field",
  truncate = TRUE, bandColor = "black", dotSize = 400/sqrt(nrow(xYData)),
  multiCore = TRUE)
}
\arguments{
\item{colorData}{A vector or a dataframe of numeric observations that will be displayed as color on the plot.}

\item{controlData}{Optional. A numeric/integer vector or dataframe of values that could be used to define the range of the colorData. If no control data is present, the function defaults to using the colorData as control data.}

\item{xYData}{These variables create the field on which the colorData will be displayed. It needs to be a dataframe with two columns and the same number of rows as the colorData object.}

\item{names}{The name(s) for the plots. The default alternative, "default" returns the column names of the colorData object in the case this is a dataframe and otherwise returns the somewhat generic name "testVariable". It can be substitutet with a string (in the case colorData is a vector) or vector of strings, as long as it has the same length as the number of columns in colorData.}

\item{densContour}{An object to create the density contours for the plot. Three possible values: 
\describe{
              \item{densContour}{A densContour object generated previously with dContours}
              \item{TRUE}{a densContour object will be generated internally}
              \item{FALSE}{No density contours will be displayed.}
             }
If not present, it will be generated with the xYData. Useful when only a subfraction of a dataset is plotted, and a superimposition of the distribution of the whole dataset is of interest.}

\item{addLegend}{If this is set to true, a separate legend plot is produced. This is most useful when the color data contains specific info about separate ids, such as clusters. Default is FALSE.}

\item{idsVector}{If a legend is added, this argument controls the naming in the legend.}

\item{drawColorPalette}{If a separate plot with the color palette used for the plots should be printed and saved.}

\item{title}{If there should be a title displayed on the plotting field. As the plotting field is saved a jpeg, this title cannot be removed as an object afterwards, as it is saved as coloured pixels. To simplify usage for publication, the default is FALSE, as the files are still named, eventhough no title appears on the plot.}

\item{createDirectory}{If a directory (i.e. folder) should be created. Defaults to TRUE.}

\item{directoryName}{The name of the created directory, if it should be created.}

\item{truncate}{If truncation of the most extreme values should be performed for the visualizations. Three possible values: TRUE, FALSE, and a vector with two values indicating the low and high threshold quantiles for truncation.}

\item{bandColor}{The color of the contour bands. Defaults to black.}

\item{dotSize}{Simply the size of the dots. The default makes the dots smaller the more observations that are included.}

\item{multiCore}{If the algorithm should be performed on multiple cores. This increases the speed if the dataset is medium-large (>100000 rows) and has at least 5 columns. Default is true, as it only affects datasets with more than one column.}
}
\value{
Plots showing the colorData displayed as color on the field created by xYData.
}
\description{
Function to overlay one variable for a set of observations on a field created by two other variables known for the same observations. The plot is constructed primarily for displaying variables on 2D-stochastic neighbour embedding fields, but can be used for any sets of (two or) three variables known for the same observations. As the number of datapoints is often very high, the files would, if saved as pdf of another vector based file type become extremely big. For this reason, the plots are saved as jpeg and no axes or anything alike are added, to simplify usage in publications.
}
\examples{
#Generate a default size dataframe with bimodally distributed data
x <- generateBimodalData(samplings=3, observations=3000)

#Scale the data 
x_scaled <- dScale(x=x[2:ncol(x)])

#Run Barnes Hut tSNE on this. 
library(Rtsne.multicore)
xSNE <- Rtsne.multicore(x_scaled, pca=FALSE)

#Set a reasonable working directory, e.g.
setwd("~/Desktop")

#Run the function for all the variables
dColorPlot(colorData=x_scaled, xYData=as.data.frame(xSNE$Y), drawColorPalette=TRUE)

#Create a color vector and display it on the SNE field.
xColor <- dColorVector(x[,1], colorScale="plasma")
dColorPlot(colorData=xColor, xYData=as.data.frame(xSNE$Y), names="separate samplings", addLegend=TRUE, idsVector=x[,1])

}
\seealso{
\code{\link{dDensityPlot}}, \code{\link{dResidualPlot}}, \code{\link{dWilcoxPlot}}, \code{\link{dColorVector}}
}
